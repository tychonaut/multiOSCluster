-- The configuration has an implict
-- require('scripts/configuration_helper.lua')
-- which defines helper functions useful to customize the configuration

-- Determines which SGCT configuration file is loaded, that is, if there rendering
-- occurs in a single window, a fisheye projection, or a dome cluster system


-- ---------------------------------------------------------------------------------------
-- GEOMAR ARENA2 Config for five-PC realtime cluster + one master PC

-- in dome for cluster test
-- SGCTConfig = "${CONFIG}/RealTimeCluster_manualAdaption_cluster/realTimeCluster5x1+master.xml"

SGCTConfig = "${CONFIG}/supportSession2/OPENSPACE_CONFIG.xml"


Paths = {

	-- on dev pc:
	--CONFIG = "D:/devel/openspace/_CONFIGS",
	-- in dome:
	CONFIG = "S:/development/OpenSpace/_CONFIGS",
    --CONFIG = "D:/devel/OpenSpace/localconfig_test",
	
	DATA = "${BASE}/data",
    ASSETS = "${DATA}/assets",
    FONTS = "${DATA}/fonts",
    TASKS = "${DATA}/tasks",
    SYNC = "${BASE}/sync",
    SCREENSHOTS = "${BASE}/screenshots",
    WEB = "${DATA}/web",
    RECORDINGS = "${BASE}/recordings",

    CACHE = "${BASE}/cache",

    DOCUMENTATION = "${BASE}/documentation",
    LOGS = "${BASE}/logs",
    MODULES = "${BASE}/modules",
    SCRIPTS = "${BASE}/scripts",
    SHADERS = "${BASE}/shaders",
    TEMPORARY = "${BASE}/temp"
}

-- Sets the scene that is to be loaded by OpenSpace. A scene file is a description
-- of all entities that will be visible during an instance of OpenSpace
Asset = "default"
-- Asset = "default_full"
-- Asset = "newhorizons"
-- Asset = "rosetta"
-- Asset = "osirisrex"
-- Asset = "voyager"
-- Asset = "gaia"
-- Asset = "juno"
-- Asset = "messenger"
-- Asset = "insight"
-- Asset = "apollo8"
-- Asset = "apollo_sites"
-- Asset = "touch"
-- Asset = "dawn"

-- Sets the profile that should be loaded by OpenSpace.  Profiles are going to replace
-- assets in a future versions and shouldn't be used at the same time as the 'Asset'
-- setting above
-- Profile = "default"

-- These scripts are executed after the initialization of each scene, thus making
-- it possible to have global overrides to default values or execute other scripts
-- regardless of the scene that is loaded
GlobalCustomizationScripts = {
    "${SCRIPTS}/customization.lua"
}




ModuleConfigurations = {
    GlobeBrowsing = {
        WMSCacheEnabled = true,
        -- OfflineMode = true,
        -- NoWarning = true,
        WMSCacheLocation = "${BASE}/cache_gdal",
        WMSCacheSize = 1024, -- in megabytes PER DATASET
        TileCacheSize = 2048 -- for all globes (CPU and GPU memory)
    },
    Sync = {
        SynchronizationRoot = "${SYNC}",
        HttpSynchronizationRepositories = {
            "http://data.openspaceproject.com/request"
            -- "http://openspace.sci.utah.edu/request"
        }
    },
    Server = {
        AllowAddresses = { "127.0.0.1", "localhost" },
        Interfaces = {
            {
                Type = "TcpSocket",
                Identifier = "DefaultTcpSocketInterface",
                Port = 4681,
                Enabled = true,
                DefaultAccess = "Deny",
                RequirePasswordAddresses = {},
                Password = ""
            },
            {
                Type = "WebSocket",
                Identifier = "DefaultWebSocketInterface",
                Port = 4682,
                Enabled = true,
                DefaultAccess = "Deny",
                RequirePasswordAddresses = {},
                Password = ""
            }
        }
    },
    WebBrowser = {
        Enabled = true
    },
    WebGui = {
        Address = "localhost",
        HttpPort = 4680,
        WebSocketInterface = "DefaultWebSocketInterface"
    },
    CefWebGui = {
        -- GuiScale = 2.0,
        Enabled = true,
        Visible = true
    }
}

Fonts = {
    Mono = "${FONTS}/Bitstream-Vera-Sans-Mono/VeraMono.ttf",
    Light = "${FONTS}/Roboto/Roboto-Regular.ttf",
    Console = "${FONTS}/Inconsolata/Inconsolata-Regular.ttf",
    Loading = "${FONTS}/Roboto/Roboto-Regular.ttf"
}

Logging = {
    LogDir = "${LOGS}",
    -- LogLevel = "Trace",
    LogLevel = "Debug",
    ImmediateFlush = true,
    Logs = {
        { Type = "html", File = "${LOGS}/log.html", Append = false }
    },
    CapabilitiesVerbosity = "Full"
}
ScriptLog = "${LOGS}/ScriptLog.txt"

Documentation = {
    Path = "${DOCUMENTATION}/"
}

VersionCheckUrl = "http://data.openspaceproject.com/latest-version"

UseMultithreadedInitialization = true
LoadingScreen = {
    ShowMessage = true,
    ShowNodeNames = true,
    ShowProgressbar = false
}
CheckOpenGLState = false
LogEachOpenGLCall = false

ShutdownCountdown = 3
ScreenshotUseDate = true

-- OnScreenTextScaling = "framebuffer"
-- PerSceneCache = true
-- DisableRenderingOnMaster = true
-- DisableInGameConsole = true

GlobalRotation = { 0.0, 0.0, 0.0 }
MasterRotation = { 0.0, 0.0, 0.0 }
ScreenSpaceRotation = { 0.0, 0.0, 0.0 }

RenderingMethod = "Framebuffer"
OpenGLDebugContext = {
   Activate = false,
   FilterIdentifier = {
       { Type = "Other", Source = "API", Identifier = 131185 },
       { Type = "Performance", Source = "API", Identifier = 131186 }, --Buffer performance warning: "copied/moved from VIDEO memory to HOST memory"
       { Type = "Deprecated", Source = "API", Identifier = 7 } -- API_ID_LINE_WIDTH deprecated behavior warning has been generated
   },
--      FilterSeverity = { }
}
--RenderingMethod = "ABuffer" -- alternative: "Framebuffer"
